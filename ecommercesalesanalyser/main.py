import pandas as pd
import matplotlib.pyplot as plt
from datetime import datetime

df=pd.read_csv('larger_sales_dataset.csv', parse_dates=['Order Date'])

def main():
    while True:
        try:
            print('Welcome to the E-Commerce Sales analyser tool')
            print()
            print("===== E-commerce Sales Dashboard Menu =====")
            print("1. Display All Sales Records")
            print("2. Add a New Order")
            print("3. Delete an Order by Order ID")
            print("4. Search Orders by Product Category")
            print("5. Filter Orders by Order Status")
            print("6. Filter Sales by Order Date")
            print("7. Calculate Total Revenue")
            print("8. Calculate Total number of quantities sold")
            print("9. Top 5 Products by Quantity Sales")
            print("10. Average Order Value")
            print("11. Sort Products by Revenue (descending order)")
            print("12. Export Filtered Data to CSV")
            print("13. Bar Plot: Sales by Category")
            print("14. Bar Plot: Category v/s quantity sold")
            print("15. Line Plot: Monthly Revenue generated")
            print("16. Scatter Plot: Payment done v/s payment method")
            print("17. Compare Revenue of Two Products")
            print("18. Line Plot: Category-wise Sales Over Time")
            print("0. Exit")
            print()
            ch=int(input('Enter your choice:-   '))
            if ch==0:
                print('Exitted the program!!!')
                exit(0)
            elif ch==1:
                df=pd.read_csv('larger_sales_dataset.csv', parse_dates=['Order Date'])
                print(df)
            elif ch==2:
                print('Please fill the form data to add the record in the dataset!!!')
                orderid=input('Enter the order id of the order of product:-   ').lower()
                productid=input('Enter the product id of the product:-   ').lower()
                productcat=input('Enter the product category:-   ').title()
                quantity=int(input('Enter the quantity of the product:-   '))
                unitprice=float(input('Enter the unit price of the product:-   '))
                totalprice=unitprice*quantity
                orderdate=datetime.strptime(input('Enter the order Date of the order (YYYY-MM-DD format):-   '), '%Y-%m-%d')
                customerid=input('Enter the customer id:-   ').lower()
                paymenttype=input('Enter the mode of payment:-   ').title()
                orderstatus=input('Enter the order status:-   ').title()
                df.loc[len(df)]={
                    'Order ID':orderid,
                    'Product ID':productid,
                    'Product Category':productcat,
                    'Quantity':quantity,
                    'Unit Price':unitprice,
                    'Total Price':totalprice,
                    'Order Date':orderdate,
                    'Customer ID':customerid,
                    'Payment Type':paymenttype,
                    'Order Status':orderstatus
                }
                print('Data written in the dataset currently in the program')
                print('Do you want to export it to the csv?')
                print('1.Yes')
                print('2.No')
                ch1=int(input('Enter your choice:-   '))
                if ch1==1:
                    file=input('Enter the file name:-   ')
                    df.to_csv(f'{file}.csv')
                    print("Data written in the cav file")
            elif ch==3:
                orderid=input('Enter the order id of the order to be deleted from the dataset:-   ')
                newdf=df[df['Order ID']!=orderid]
                print('Data deleted!!!')
                ch1=int(input('Enter your choice:-   '))
                if ch1==1:
                    file=input('Enter the file name:-   ')
                    newdf.to_csv(f'{file}.csv')
                    print("Data written in the cav file")
            elif ch==4:
                productcat=input('Enter the product category to be searched:-   ').title()
                print(df[df['Product Category']==productcat])
            elif ch==5:
                newdf=df.groupby('Order Status')
                for i,j in newdf:
                    print(i,'\n\n\n')
                    print(j)
            elif ch==6:
                newdf=df.groupby('Order Date')
                for i,j in newdf:
                    print(i,'\n\n\n')
                    print(j)
            elif ch==7:
                print(f'The total revenue generated by all the sales in the dataset is:-   {df['Total Price'].sum()}')
            elif ch==8:
                print(f'The total revenue generated by all the sales in the dataset is:-   {df['Quantity'].sum()}')
            elif ch==9:
                print(df.sort_values(by='Quantity', ascending=False)[0:5])
            elif ch==10:
                print(f'On an average a person ordered products costing {df['Total Price'].mean()}.')
            elif ch==11:
                newdf=df.sort_values(by='Total Price',ascending=False)
                print('Data sorted in the dataset currently in the program')
                print('Do you want to export it to the csv?')
                print('1.Yes')
                print('2.No')
                ch1=int(input('Enter your choice:-   '))
                if ch1==1:
                    file=input('Enter the file name:-   ')
                    newdf.to_csv(f'{file}.csv')
                    print("Data written in the cav file")
            elif ch==12:
                file=input('Enter the file name:-   ')
                df.to_csv(f'{file}.csv')
                print("Data written in the cav file")
            elif ch==13:
                newdf=df[['Product Category','Total Price']]
                grouped=newdf.groupby('Product Category').sum()
                plt.bar(grouped.index,grouped['Total Price'])
                plt.title('Category v/s revenue generated',fontsize=15)
                plt.xlabel('Product Category', fontsize=15)
                plt.ylabel('Revenue generated (x 10^6)',fontsize=15)
                plt.xticks(rotation=30)
                plt.show()
            elif ch==14:
                newdf=df[['Product Category','Quantity']]
                grouped=newdf.groupby('Product Category').sum()
                plt.bar(grouped.index,grouped['Quantity'])
                plt.title('Category v/s quantity sold',fontsize=15)
                plt.xlabel('Product Category', fontsize=15)
                plt.ylabel('Quantity Sold',fontsize=15)
                plt.xticks(rotation=30)
                plt.show()
            elif ch==15:
                newdf=df[['Order Date','Total Price']].groupby(df['Order Date'].dt.month)
                grouped={}
                for i,j in newdf:
                    grouped[i]=j['Total Price'].sum()
                groupeddf=pd.DataFrame(grouped,index=['Revenue Generated']).T
                plt.plot(groupeddf.index,groupeddf['Revenue Generated'])
                plt.xlabel('Month',fontsize=15)
                plt.ylabel('Revenue',fontsize=15)
                plt.title('Revenue Generated per month',fontsize=15)
                plt.show()
            elif ch==16:
                newdf=df[['Total Price','Payment Type']]
                grouped=newdf.groupby('Payment Type').sum()
                plt.scatter(grouped.index,grouped['Total Price'])
                plt.title('Category v/s revenue generated',fontsize=15)
                plt.xlabel('Product Category', fontsize=15)
                plt.ylabel('Revenue generated (x 10^6)',fontsize=15)
                plt.xticks(rotation=30)
                plt.show()
            elif ch==17:
                prod1=input('Enter the id of product 1:-   ').lower()
                prod2=input('Enter the id of product 2:-   ').lower()
                plt.bar(df[(df['Product ID']==prod1) | (df['Product ID']==prod2)]['Product ID'],df[(df['Product ID']==prod1) | (df['Product ID']==prod2)]['Total Price'])
                plt.xlabel('Product ID',fontsize=15)
                plt.ylabel('Revenue Generated',fontsize=15)
                plt.title('Comparison of the revenue of two products',fontsize=15)
                plt.xticks(rotation=30)
                plt.show()
            elif ch==18:
                newdf=df[['Total Price','Order Date','Product Category']].groupby('Product Category')
                print(len(newdf))
                for i,j in newdf:
                    plt.plot(j['Order Date'],j['Total Price'],label=i)
                plt.legend()
                plt.show()
            else:
                print('Please enter a valid choice!!! it is not a valid choice.')
        except Exception as e:
            print(e)